name: deploy_shiny

# Controls when the workflow will run
on:
  schedule:
    - cron: "30 04 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    #runs-on: ubuntu-latest
    runs-on: ubuntu-20.04
    
    env:
      # set as environment variables (they will never be printed/echoed in logs)
      SHINY_TOKEN: ${{ secrets.SHINY_TOKEN }}
      SHINY_SECRET: ${{ secrets.SHINY_SECRET }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install linux libraries
        run: sudo apt install libcurl4-openssl-dev libssl-dev libgdal-dev libsodium-dev
        
      - name: Setup R Dependencies (using renv.lock)
        uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 2      
          
      - name: Connect to Shiny
        run: |
          shiny_token = Sys.getenv("SHINY_TOKEN")
          shiny_secret = Sys.getenv("SHINY_SECRET")
          rsconnect::setAccountInfo(name='dhcssza-stakeholder-map', token=shiny_token, secret=shiny_secret)
        shell: Rscript {0}
        
      - name: Uploading to shinyapps.io
        run: rsconnect::deployApp(appDir = "shiny_stakeholder_map", appFiles=c('app.R', 'shiny_data.RData', 'my_map_activ.R'), account = 'dhcssza-stakeholder-map', server = 'shinyapps.io',  getOption("rsconnect.force.update.apps", TRUE))
        shell: Rscript {0}
      
          

